#1) Genera 5 series de tiempo con nombre multiple1. Los rangos de estas series son serie 1) de 15 a 35 , 2) de 100 a 200 , 3) 29 a 49 y 4) 42 a 162 . Las series deben tener 250 mensules e inician en el tercer mes del 1990.
#Hacer estos datos como data frame
#— generar cada una de las columnas en series de tiempo,,,,
#1.1)de la serie 1, 2 series de tiempo y dividenlas (con funcion en r) en 2 series que vayan de 1990 a 2003 y de 1998 a 2006 y después grafíquenlas.
#1.2) dividir la series 3 y 5 a traves de corchetes desde la observacion 150 a la 250...
#1.2) De 2 series (la que quieran) series obtener y generar 2 data frame de la tendencia y la estacionalidad 
#5.3) De las 4 series obtener correlación, covarianza y la función de autocorrelación.
#1.3 Obtener la función de autocorrrelacion de las 4 series de tiempo y analizar si el correlograma para saber si alguna de las series tienen ruido blanco.
#1.4 Grafique las 5 series en una sola grafica con leyenda y todos los argumentos de la función plot



### importen una serie de tiempo  de la pagina del inegi y expliquen cada linea de este script 
v1<-sample(15:35,250,replace=TRUE)
v2<-sample(100:200,250,replace=T)
v3<-sample(29:49,250,replace=T)
v4<-sample(42:162,250,replace=T)
v5<-sample(30:150,250,replace=T)
multiple1<-data.frame(v1,v2,v3,v4,v5)
View(multiple1)
install.packages("foreign")
require(foreign)
st1<-ts(multiple1[,1],frequency=12,start=c(1990,3))
#1) Genera 5 series de tiempo con nombre multiple1. Los rangos de estas series son serie 1) de 15 a 35 , 2) de 100 a 200 , 3) 29 a 49 y 4) 42 a 162 . Las series deben tener 250 mensules e inician en el tercer mes del 1990.
#Hacer estos datos como data frame
#— generar cada una de las columnas en series de tiempo,,,,
#1.1)de la serie 1, 2 series de tiempo y dividenlas (con funcion en r) en 2 series que vayan de 1990 a 2003 y de 1998 a 2006 y después grafíquenlas.
#1.2) dividir la series 3 y 5 a traves de corchetes desde la observacion 150 a la 250...
#1.2) De 2 series (la que quieran) series obtener y generar 2 data frame de la tendencia y la estacionalidad 
#5.3) De las 4 series obtener correlación, covarianza y la función de autocorrelación.
#1.3 Obtener la función de autocorrrelacion de las 4 series de tiempo y analizar si el correlograma para saber si alguna de las series tienen ruido blanco.
#1.4 Grafique las 5 series en una sola grafica con leyenda y todos los argumentos de la función plot



### importen una serie de tiempo  de la pagina del inegi y expliquen cada linea de este script 
v1<-sample(15:35,250,replace=TRUE)
v2<-sample(100:200,250,replace=T)
v3<-sample(29:49,250,replace=T)
v4<-sample(42:162,250,replace=T)
v5<-sample(30:150,250,replace=T)
multiple1<-data.frame(v1,v2,v3,v4,v5)
View(multiple1)
install.packages("foreign")
require(foreign)
st1<-ts(multiple1[,1],frequency=12,start=c(1990,3))
st2<-ts(multiple1[,2],frequency=12,start=c(1990,3))
st3<-ts(multiple1[,3],frequency=12,start=c(1990,3))
st4<-ts(multiple1[,4],frequency=12,start=c(1990,3))
st5<-ts(multiple1[,5],frequency=12,start=c(1990,3))


#realizando corte
st1corte<-window(st1,start=c(1990,3),end=c(2003,12))
st2corte<-window(st2,start=c(1998,1),end=c(2006,12))

##graficandolas
plot(cbind(st1corte,st2corte))

#corte atravez de corchetes
st3corch<-st3[150:250]
st3
st3corch

st5corch<-st5[150:250]
st5corch

####descomponeindo la serie de tiempo 2 y 4
st2des<-decompose(st2)
st4des<-decompose(st4)

tend2<-st2des$trend
tend4<-st4des$trend
tend2y4<-data.frame(tend2,tend4)

sta2<-st2des$seasonal
sta4<-st4des$seasonal
sta2y4<-data.frame(sta2,sta4)

###correlación, covarianza y la función de autocorrelación
cor(st1,st2,method = "pearson")
cov(st3,st4,method="pearson")
acf(st1,type ="correlation",plot = T)
acf(st2,type ="correlation",plot = T)
acf(st3,type ="correlation",plot = T)
acf(st4,type ="correlation",plot = T)
##la 4 series tienen ruido ya que son pocos los valores que se hacercan a 1 y en
##todas la graficas el valor de la primera observacion es 1
help(acf)
#Grafique las 5 series en una sola grafica con
#leyenda y todos los argumentos de la función plot
plot(st1,main="series de tiempo",xlab="produccion",ylab="ventas")
lines(st2,col="blue")
lines(st3,col="green")
lines(st4,col="red")
lines(st5,col="orange")
legend("")
help("legend")

#importar serie de inegi
inegi<-read.csv("C:\\Users\\SALA-D21\\Downloads")##pide importar el documento desde la ruta del cpu
